@0xdbbcd8ccbd223b6c; # unique file ID, generated by `capnp id`

struct AssetId {
  id @0 :Data;
}
struct AssetType {

}

struct KeyValue {
  key @0 :Data;
  value @1 :Data;
}

enum FileType {
  file @0;
  directory @1;
  symlink @2;
  none @3;
}

enum FileState {
  exists @0;
  deleted @1;
}

struct DirtyFileInfo {
  state @0 :FileState;
  sourceInfo @1 :SourceFileInfo;
}

struct SourceFileInfo {
  type @0 :FileType;
  lastModified @1 :UInt64;
  length @2 :UInt64;
}

# Based on the set of candidate files and updates provided by FileTracker,
# the hash is determined for all changed files.
struct FileHashInfo {
  hash @0 :Data;
  lastModified @1 :UInt64;
  length @2 :UInt64;
}

struct SourcePairInfo {
  source @0 :FileHashInfo;
  meta @1 :FileHashInfo;
  importError @2 :ImportError;
  latestImportArtifactKey @3 :ImportArtifactKey;
}

# I
struct ImportError {
  text @0 :Text;
}

# The identifier for an import artifact is the hash of 
# - Source asset contents
# - Source metadata contents
# - Importer version/id
# - Importer configuration (target platform etc)
struct ImportArtifactKey {
  hash @0 :Data;
}

struct AssetMetadata {
  id @0 :AssetId;
  loadDeps @1 :List(AssetId);
  buildDeps @2 :List(AssetId);
  instantiateDeps @3 :List(AssetId);
  searchTags @4 :List(KeyValue);
}

struct ImportedMetadata {
  metadata @0 :AssetMetadata;
  # The most recently recorded hash of the input to the import function
  latestArtifact :union {
    id @1 :ImportArtifactKey;
    none @2 :Void;
  }
  # The source of the imported asset
  source @3 :UInt64;
}
